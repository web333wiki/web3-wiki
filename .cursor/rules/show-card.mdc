---
description: 
globs: 
alwaysApply: false
---
## Show Card Rules

### Card Overview

A `show-card` offers a detailed look at a specific project, tool, or service within the Web3 ecosystem. It functions as an informative and analytical resource, providing insights into the project's purpose, features, technology, and overall role in the Web3 space. The goal of a `show-card` is to be the primary reference for understanding the project in depth, covering its use cases, integrations, and significance.

### Core Requirements

When creating or updating `show-card` files, adhere to these core requirements:

- General Card Rules: Strictly follow all guidelines outlined in the `wiki-guide`. This is a fundamental requirement.
- Content Structure and Organization: Prioritize a logical and well-organized structure. The content must be easy to navigate, with clear headings and subheadings to enhance readability.
- Runnable Examples/Demos: Whenever practical, include a runnable example or demonstration of the project or tool. This allows users to grasp its practical application. If embedding a runnable version is not feasible, provide a direct link to a demo or example.
- Comparative Analysis: Include a section that discusses similar or competing projects. This helps users understand the project's positioning in the market and its key differentiators.

### Key Content Sections

This section details the recommended content areas for a `show-card`. While it's not mandatory to include every item, strive to cover as many as possible to create a comprehensive and valuable resource. To build a comprehensive card, research these content areas (web searches are often necessary) and then organize the information logically.

Please note that we should put the summary in the `Overview` section instead of the top of the card.

* Overview

    This section should consider to include the following:

    - An in-depth summary of the project, tool, or service, including its core mission, operational context, and the problem it solves.
    - Elaboration on the project's unique benefits, advantages, and key differentiators, with comparisons to existing solutions where applicable.
    - The background of the project, including the founders, the team, and the history, key milestones of the project.
    - A "get started" guide or resources to help users begin with the project, including links to the official website, documentation, community channels, and GitHub repository. Preferably, construct these resources in a table format.

* Key Services/Features

    This section is critical and must be comprehensive and detailed. For each key service or feature, provide a thorough explanation, ideally in a dedicated subsection for clarity. It should cover the following items:

    - Introduction to what the feature is, preferably with an external link to the official documentation.
    - The underlying technology or mechanism of the feature. This is particularly important for coders and researchers, as they can find solutions here - this is the value of this wiki card.
    - The real-world use cases and benefits.

    For each item, prefer to use natural language, paragraphs instead of bullet points or summary lists.

* Comparative Analysis

    This section is optional but highly recommended. It should:

    - Compare the project with similar or competing projects.
    - Offer a balanced and detailed comparison.
    - Preferably, include a table for the comparison.

### Final Notes

- Review the card's structure and content flow, adjusting as needed to ensure clarity and comprehensiveness.
- Avoid overly brief descriptions. Aim for detailed and informative content in all sections, moving beyond single-sentence explanations.
- For detailed explanations, favor dedicated subsections over bullet points to provide depth and context.
